#golang tools

# Gopath
GO_PATH := $(shell go env GOPATH)

# Name of local package (see go.mod)
LOCAL_IMPORT := github.com/torenken/doc-box

ALL_SRC_DIRS := $(shell go list -f {{.Dir}} ./...)
ALL_BUSINESS_SRC_DIRS := $(shell go list ./... | grep 'pkg/store' | grep -v 'domain')

# go commands
GO_TEST := go test
GO_TEST_OPT := -race -timeout 5s
GO_TEST_OPT_WITH_COVERAGE := $(GO_TEST_OPT) -coverprofile=coverage.txt -covermode=atomic
GO_TEST_INTEGRATION_OPT := -race -timeout 10s
GO_TEST_OPT_WITH_INTEGRATION := $(GO_TEST_INTEGRATION_OPT) -coverprofile=integration-coverage.txt -covermode=atomic

GO_LIST := go list
GO_MOD := go mod

# test conf

# external-tools
GO_FMT := gofmt
GO_IMPORTS := goimports
IMPI := impi
LINT := golangci-lint
LINT_VERSION := v1.50.1
SYFT := syft
SYFT_VERSION := v0.60.3
GRYPE := grype
GRYPE_VERSION := v0.52.0

.DEFAULT_GOAL := common

.PHONY: common
common: goimpi golint

.PHONY: goimpi
goimpi:
	@echo "running $(IMPI) and verifying golang import directives"
	$(IMPI) --local $(LOCAL_IMPORT) --scheme stdThirdPartyLocal $(ALL_SRC_DIRS)

.PHONY: gofmt
gofmt:
	$(GO_FMT) -w -s $(ALL_SRC_DIRS)
	$(GO_IMPORTS) -v -w  -local $(LOCAL_IMPORT) $(ALL_SRC_DIRS)

.PHONY: golint
golint:
	@echo "running $(LINT) in `pwd`"
	$(GO_PATH)/bin/$(LINT) run --verbose --allow-parallel-runners

.PHONY: golist-updates
golist-updates:
	$(GO_LIST) -u -f '{{if (and (not (or .Main .Indirect)) .Update)}}{{.Path}}: {{.Version}} -> {{.Update.Version}}{{end}}' -m all 2> /dev/null

.PHONY: gotidy
gotidy:
	@rm -fr go.sum
	$(GO_MOD) tidy

.PHONY: gotest
gotest:
	$(GO_TEST) -v ./...

.PHONY: syft-and-grype
syft-and-grype:
	@echo "running syft and grype to investigate vulnerabilities in your Golang dependencies"
	$(GO_PATH)/bin/$(SYFT) packages dir:build -o spdx-json --file sbom.json
	$(GO_PATH)/bin/$(GRYPE) sbom:./sbom.json --add-cpes-if-none

.PHONY: install-tools
install-tools: install-golangci-lint install-goimports install-impi install-syft install-grype

.PHONY: install-golangci-lint
install-golangci-lint:
	@echo "installing golangci-lint $(LINT_VERSION)"
	curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(GO_PATH)/bin $(LINT_VERSION)

.PHONY: install-syft
install-syft:
	@echo "installing syft $(SYFT_VERSION)"
	curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b $(GO_PATH)/bin $(SYFT_VERSION)

.PHONY: install-grype
install-grype:
	@echo "installing grype $(GRYPE_VERSION)"
	curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b $(GO_PATH)/bin $(GRYPE_VERSION)

.PHONY: install-goimports
install-goimports:
	@echo "installing goimports"
	go install golang.org/x/tools/cmd/goimports@latest

.PHONY: install-impi
install-impi:
	@echo "installing impi"
	go install github.com/pavius/impi/cmd/impi@latest