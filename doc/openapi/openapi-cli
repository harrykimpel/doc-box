#!/usr/bin/env bash

set -Eeuo pipefail
trap cleanup SIGINT SIGTERM ERR EXIT

script_dir=$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd -P)

# configure me
model_dir=tmf
target_dir=$script_dir/../../pkg

usage() {
  cat <<EOF
Usage: $(basename "${BASH_SOURCE[0]}") [-d] [-g] [-h] [-v]

This script generates a go model from the given openapi spec.

Available options:

-d, --download  Download openapi-generator-cli.jar
-g, --generate  Generate and move to target folder
-h, --help      Print this help and exit
-v, --verbose   Print script debug info
EOF
  exit
}

cleanup() {
  trap - SIGINT SIGTERM ERR EXIT
  # script cleanup here
}

setup_colors() {
  if [[ -t 2 ]] && [[ -z "${NO_COLOR-}" ]] && [[ "${TERM-}" != "dumb" ]]; then
    NOFORMAT='\033[0m' RED='\033[0;31m' GREEN='\033[0;32m' ORANGE='\033[0;33m' BLUE='\033[0;34m' PURPLE='\033[0;35m' CYAN='\033[0;36m' YELLOW='\033[1;33m'
  else
    NOFORMAT='' RED='' GREEN='' ORANGE='' BLUE='' PURPLE='' CYAN='' YELLOW=''
  fi
}

msg() {
  echo >&2 -e "${1-}"
}

die() {
  local msg=$1
  local code=${2-1} # default exit status 1
  msg "$msg"
  exit "$code"
}

# script logic here

openapi-generator-cli() {
  msg "download openapi-generator-cli..."
  wget https://repo1.maven.org/maven2/org/openapitools/openapi-generator-cli/5.3.1/openapi-generator-cli-5.3.1.jar -O openapi-generator-cli.jar
	msg "successful: download openapi-generator-cli..."
}

generate-go-files() {
  msg "generate go-files..."
  rm -rf $model_dir
  java -jar openapi-generator-cli.jar generate -c config/golang.yaml --global-property models,modelDocs=false
  gofmt -w -s $model_dir
  msg "successful: generate go-files..."
}

generate-asciidoc() {
  msg "generate asciidoc..."
  java -jar openapi-generator-cli.jar generate -c config/asciidoc.yaml
  rm -rf .openapi-generator
  rm -f .openapi-generator-ignore
  msg "successful: generate asciidoc..."
}

move-go-files() {
  msg "move go-files to $target_dir"
  mkdir -p $target_dir
  cp -R $model_dir $target_dir
  rm -rf $model_dir
  msg "successful: move go-files..."
}

download() {
  openapi-generator-cli
  exit
}

generate() {
  generate-asciidoc
  generate-go-files
  move-go-files
  exit
}

parse_params() {
  # default values of variables set from params
  flag=0
  param=''

  while :; do
    case "${1-}" in
    -h | --help) usage ;;
    -v | --verbose) set -x ;;
    --no-color) NO_COLOR=1 ;;
    -d | --download) download ;;
    -g | --generate) generate ;;
    -?*) die "Unknown option: $1" ;;
    *) break ;;
    esac
    shift
  done

  args=("$@")

  # check required params and arguments
  [[ ${#args[@]} -eq 0 ]] && die "Missing script arguments use -h for help"

  return 0
}

setup_colors
parse_params "$@"